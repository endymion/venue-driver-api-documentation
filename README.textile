h1. Venue Driver API Documentation

h2. REST API

Venue Driver provides a simple HTTP API that's built according to a REST design pattern.  That just means that each of our resources like "Events" has a URL that you can call, and each resource has 'index', 'create', 'read', 'update' and 'delete' actions.  You tell it whether you want your data in XML or JSON.  In some cases we also provide HTML representations so that you don't even have to process raw data.

h3. Resources

Venue Driver provides easy XML or JSON access to Reservation and Guest (for Guestlist) resources:

* Venues
* Venues/Events
* Venues/Events/Flyers
* Reservations
* Guests
* Contacts

h2. Common tasks

h3. Get an event list

You can get an event list for a venue record in Venue Driver if you have a valid login and also the venue ID.  The API's /venues resource exposes a nested events resource.  So if you want the events for the venue with ID 1234, then you can get that with:

<pre>
<code>
curl 'http://venuedriver.com/api/venues/1234/events.xml?username=venuesite&password=password'
</code>
</pre>
  
The above will return something like this:

<pre>
<code>
<events type="array">
  <event>
    <VIP-URL nil="true"></VIP-URL>
    <active type="boolean" nil="true"></active>
    <ages nil="true"></ages>
    <close type="datetime">2000-01-01T08:15:00-05:00</close>
    <closed-message nil="true"></closed-message>
    <cover nil="true"></cover>
    <created-at type="datetime">2010-02-09T20:48:10-05:00</created-at>
    <date type="date">2010-03-12</date>
    <description nil="true"></description>
    <guestlist-URL nil="true"></guestlist-URL>
    <guestlist-conditions nil="true"></guestlist-conditions>
    <home-URL nil="true"></home-URL>
    <id type="integer">5635</id>
    <myspace-URL nil="true"></myspace-URL>
    <open type="datetime">2000-01-01T22:30:00-05:00</open>
    <tickets-URL nil="true"></tickets-URL>
    <tickets-sold-count type="integer">0</tickets-sold-count>
    <time type="datetime" nil="true"></time>
    <title>Friday Event</title>
    <updated-at type="datetime">2010-03-01T14:42:29-05:00</updated-at>
  </event>
  <event>
    <VIP-URL nil="true"></VIP-URL>
    <active type="boolean" nil="true"></active>
    <ages nil="true"></ages>
    <close type="datetime">2000-01-01T08:15:00-05:00</close>
    <closed-message nil="true"></closed-message>
    <cover nil="true"></cover>
    <created-at type="datetime">2010-02-09T20:48:35-05:00</created-at>
    <date type="date">2010-03-13</date>
    <description nil="true"></description>
    <guestlist-URL nil="true"></guestlist-URL>
    <guestlist-conditions nil="true"></guestlist-conditions>
    <home-URL nil="true"></home-URL>
    <id type="integer">5636</id>
    <myspace-URL nil="true"></myspace-URL>
    <open type="datetime">2000-01-01T22:00:00-05:00</open>
    <tickets-URL nil="true"></tickets-URL>
    <tickets-sold-count type="integer">0</tickets-sold-count>
    <time type="datetime" nil="true"></time>
    <title>Saturday Event</title>
    <updated-at type="datetime">2010-03-01T14:42:29-05:00</updated-at>
  </event>
</events>
</code>
</pre>

h3. Get flyer images for an event

Flyers are a nested resource under the event resource.  They are not included in the event list returned by /venues/:venue_id/events.xml, but you can obtain them through the flyer resource:

<pre>
<code>
  curl 'http://venuedriver.com/api/venues/1234/events/5678/flyers.xml?username=venuesite&password=password'
</code>
</pre>

The above will return the list of flyers for the event 5678:

<pre>
<code>
  <?xml version="1.0" encoding="UTF-8"?>
  <flyers type="array">
    <flyer>
      <asset-content-type>image/jpeg</asset-content-type>
      <asset-file-name>IMG_3020.jpg</asset-file-name>
      <asset-file-size type="integer">473217</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T17:00:00-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">8</id>
      <asset-url>/assets/8/original/IMG_3020.jpg</asset-url>
    </flyer>
    <flyer>
      <asset-content-type>image/jpeg</asset-content-type>
      <asset-file-name>IMG_2970.jpg</asset-file-name>
      <asset-file-size type="integer">603736</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T17:00:56-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">9</id>
      <asset-url>/assets/9/original/IMG_2970.jpg</asset-url>
    </flyer>
    <flyer>
      <asset-content-type>image/jpeg</asset-content-type>
      <asset-file-name>Safari-screenshot-236.jpg</asset-file-name>
      <asset-file-size type="integer">58457</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T18:02:25-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">10</id>
      <asset-url>/assets/10/original/Safari-screenshot-236.jpg</asset-url>
    </flyer>
    <flyer>
      <asset-content-type>application/pdf</asset-content-type>
      <asset-file-name>20091206-160523.pdf</asset-file-name>
      <asset-file-size type="integer">3302460</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T18:38:33-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">12</id>
      <asset-url>/assets/12/original/20091206-160523.pdf</asset-url>
    </flyer>
    <flyer>
      <asset-content-type>image/jpeg</asset-content-type>
      <asset-file-name>02_events.jpg</asset-file-name>
      <asset-file-size type="integer">1378489</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T18:39:34-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">13</id>
      <asset-url>/assets/13/original/02_events.jpg</asset-url>
    </flyer>
  </flyers>
</code>
</pre>

You can also use the show action for the event resource.  For example, this will return the list of flyer images for the event 5678 at the venue 1234:

<pre>
<code>
  curl 'http://venuedriver.com/api/venues/1234/events/5678.xml?username=venuesite&password=password'
</code>
</pre>

The response includes the attributes for the event as in the above, but it also includes the nested flyer records:

<pre>
<code>
<?xml version="1.0" encoding="UTF-8"?>
<event>
  <VIP-URL nil="true"></VIP-URL>
  <active type="boolean" nil="true"></active>
  <ages nil="true"></ages>
  <close type="datetime">2000-01-01T09:00:00-05:00</close>
  <closed-message nil="true"></closed-message>
  <cover nil="true"></cover>
  <created-at type="datetime">2010-01-02T01:01:46-05:00</created-at>
  <date type="date">2010-03-02</date>
  <description nil="true"></description>
  <guestlist-URL nil="true"></guestlist-URL>
  <guestlist-conditions nil="true"></guestlist-conditions>
  <home-URL nil="true"></home-URL>
  <id type="integer">5313</id>
  <myspace-URL nil="true"></myspace-URL>
  <open type="datetime">2000-01-01T22:30:00-05:00</open>
  <tickets-URL nil="true"></tickets-URL>
  <time type="datetime" nil="true"></time>
  <title>Tuesday Night</title>
  <updated-at type="datetime">2010-03-01T14:42:14-05:00</updated-at>
  <wiki-name nil="true"></wiki-name>
  <flyers type="array">
    <flyer>
      <asset-content-type>image/jpeg</asset-content-type>
      <asset-file-name>IMG_3020.jpg</asset-file-name>
      <asset-file-size type="integer">473217</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T17:00:00-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">8</id>
      <asset-url>/assets/8/original/IMG_3020.jpg</asset-url>
    </flyer>
    <flyer>
      <asset-content-type>image/jpeg</asset-content-type>
      <asset-file-name>IMG_2970.jpg</asset-file-name>
      <asset-file-size type="integer">603736</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T17:00:56-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">9</id>
      <asset-url>/assets/9/original/IMG_2970.jpg</asset-url>
    </flyer>
    <flyer>
      <asset-content-type>image/jpeg</asset-content-type>
      <asset-file-name>Safari-screenshot-236.jpg</asset-file-name>
      <asset-file-size type="integer">58457</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T18:02:25-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">10</id>
      <asset-url>/assets/10/original/Safari-screenshot-236.jpg</asset-url>
    </flyer>
    <flyer>
      <asset-content-type>application/pdf</asset-content-type>
      <asset-file-name>20091206-160523.pdf</asset-file-name>
      <asset-file-size type="integer">3302460</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T18:38:33-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">12</id>
      <asset-url>/assets/12/original/20091206-160523.pdf</asset-url>
    </flyer>
    <flyer>
      <asset-content-type>image/jpeg</asset-content-type>
      <asset-file-name>02_events.jpg</asset-file-name>
      <asset-file-size type="integer">1378489</asset-file-size>
      <asset-updated-at type="datetime">2010-03-02T18:39:34-05:00</asset-updated-at>
      <event-id type="integer">5313</event-id>
      <id type="integer">13</id>
      <asset-url>/assets/13/original/02_events.jpg</asset-url>
    </flyer>
  </flyers>
</event>
</code>
</pre>

h2. Convenience methods

h3. Event select tag

Venue Driver provides an API method that will return HTML code for an event select box, to be inserted
directly into a web page.  For example, to get a drop-down select box for all upcoming events at the venue with Venue Driver ID code 1234, you might call a URL like this:

<pre>
<code>
http://venuedriver.com/api/venues/1234/events/select_tag.html?username=venuesite&password=password
</code>
</pre>

You can test from the command line using the cURL utility:

<pre>
<code>
curl 'http://venuedriver.com/api/venues/129582/events/select_tag.html?username=venuesite&password=password'
</code>
</pre>

It will return something like this:

<pre>
<code>
<select id="event" name="event"><option value="3768">Cabaret of Dr. Calagari - Apr 16</option>
<option value="3769">Latin Night and Tequila Party - Apr 17</option>
<option value="3859">Visionshock - International District Spring Roll Party - Apr 24</option>
<option value="3860">Sounders Latin Preparty - Apr 25</option>
<option value="3832">Glamour - May 01</option></select>
</code>
</pre>

Using that resource URL is pretty simple.  In Ruby for example it looks like this:

<pre>
<code>
url = "http://venuedriver/api/venues/129582/events/select_tag.html?username=venuesite&password=password"
events_html = Net::HTTP.get_response(URI.parse(url))
</code>
</pre>

Then you can just drop that HTML snippet into your form with @<%= events_html %>@ or the equivalent in PHP or whatever.  That gives you a simple way to build a form that can request guest list signup for any upcoming event.

When somebody submits the form, creating the guest list entry is similarly simple.  It also involves a simple HTTP query to an API URL.  Are you using PHP?  I can send you an example snippet for doing the post if so.

h2. Examples

h3. Ruby on Rails

"Promoter":http://github.com/angelmg/promoter is a Rails plugin for accessing the Venue Driver API.  Promoter is a Rails Engine plugin that adds controllers and views to your web site for providing reservation, guest list and mailing list signup forms.  It uses Active Resource to access Venue Driver.  For example, here is how to get a list of events and a list of flyers for an event from the console:

<pre>
<code>
  >> @events = Event.find(:all, :params => {:venue_id => 1})
  => [#<Event:0x1031b08b0 @attributes={"open"=>Sun Jan 02 03:30:00 UTC 2000, "myspace_URL"=>nil, ...
  >> @events.size 
  => 38
  >> puts @events.first.to_yaml
  --- !ruby/object:Event 
  attributes: 
    open: 2000-01-02 03:30:00 Z
    myspace_URL: 
    created_at: 2009-12-18 03:48:14 Z
    title: Sundays at Tabu
    close: 2000-01-01 13:30:00 Z
    closed_message: 
    ages: 
    cover: 
    guestlist_conditions: 
    updated_at: 2010-03-01 19:42:22 Z
    time: 
    wiki_name: 
    id: 5237
    date: 2010-02-28
    VIP_URL: 
    tickets_URL: 
    home_URL: 
    description: 
    active: 
    flyers: []

    tickets_sold_count: 0
    guestlist_URL: 
  prefix_options: 
    :venue_id: 1
  => nil
  >> @flyers = Flyer.find(:all, :params => {:venue_id => 1, :event_id => 5313})
  => [#<Flyer:0x102ee6940 @attributes={"asset_file_name"=>"IMG_3020.jpg", "asset_url"=>"/assets/8/original/IMG_3020.jpg" ...
  >> @flyers.size
  => 5
  >> puts @flyers.first.to_yaml
  --- !ruby/object:Flyer 
  attributes: 
    asset_file_name: IMG_3020.jpg
    asset_url: /assets/8/original/IMG_3020.jpg
    asset_file_size: 473217
    asset_content_type: image/jpeg
    id: 8
    parent_id: 
    asset_updated_at: 2010-03-02 22:00:00 Z
  prefix_options: 
    :venue_id: 1
    :event_id: 5313
  => nil
  >> 
</code>
</pre>

h3. PHP

These examples show how to build reservation and guest list forms with PHP.  These examples use a "PHP library":http://code.google.com/p/phpactiveresource/ for accessing our REST resources.

Here are the example files:

"Example PHP reservation form":http://github.com/endymion/venue-driver-api-documentation/raw/master/examples/php/ReservationForm.php
"Example PHP guest list form":http://github.com/endymion/venue-driver-api-documentation/raw/master/examples/php/GuestListForm.php
"Venue Driver API configuration file":http://github.com/endymion/venue-driver-api-documentation/raw/master/examples/php/VenueDriver.php
"ActiveResource REST API for PHP":http://github.com/endymion/venue-driver-api-documentation/raw/master/examples/php/ActiveResource.php